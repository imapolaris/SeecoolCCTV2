<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:local="clr-namespace:CCTVReplay.Time">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DictCalendar.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--Toggle按钮样式-->
    <Style x:Key="ComboBoxToggleButton"
           TargetType="ToggleButton">
        <Setter Property="Width"
                Value="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />
        <Setter Property="Foreground"
                Value="{StaticResource CaleNormTextBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border BorderThickness="1,0,0,0"
                                BorderBrush="{StaticResource CaleNormTextBrush}"
                                Background="{TemplateBinding Background}" />
                        <Path x:Name="Arrow"
                              Grid.Column="1"
                              Fill="{TemplateBinding Foreground}"
                              Stroke="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 8 12 L 16 0 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="Gray" />
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource CaleSelTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource CaleSelTextBrush}" />
                            <Setter Property="Background"
                                    Value="{StaticResource CaleNormTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--内容调节按钮样式-->
    <Style x:Key="ButtonSpinnerStyle1"
           TargetType="{x:Type xctk:ButtonSpinner}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstContentColumn"
                                                  Width="*" />
                                <ColumnDefinition x:Name="secondContentColumn"
                                                  Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Grid x:Name="gridContent"
                                  Grid.Column="1"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowButtonSpinner">
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <RepeatButton x:Name="PART_IncreaseButton"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Foreground="{TemplateBinding Foreground}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Grid>
                                                <Border BorderThickness="1,0,0,1"
                                                        Background="#01000000"
                                                        x:Name="border"
                                                        BorderBrush="{TemplateBinding Foreground}" />
                                                <Path x:Name="path"
                                                      Data="M5,0 L 0,10 L 10,10 z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Margin="3"
                                                      HorizontalAlignment="Stretch"
                                                      Stretch="Uniform"
                                                      VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="path"
                                                            Value="{StaticResource CaleSelTextBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="path"
                                                            Value="{StaticResource CaleSelTextBrush}" />
                                                    <Setter Property="Background"
                                                            TargetName="border"
                                                            Value="{StaticResource CaleNormTextBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                                <RepeatButton x:Name="PART_DecreaseButton"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Foreground="{TemplateBinding Foreground}"
                                              Grid.Row="1">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Grid>
                                                <Border BorderThickness="1,0,0,0"
                                                        Background="#01000000"
                                                        x:Name="border"
                                                        BorderBrush="{TemplateBinding Foreground}" />
                                                <Path x:Name="path"
                                                      Data="M5,10 L 0,0 L 10,0 z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Margin="3"
                                                      HorizontalAlignment="Stretch"
                                                      Stretch="Uniform"
                                                      VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="path"
                                                            Value="{StaticResource CaleSelTextBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="path"
                                                            Value="{StaticResource CaleSelTextBrush}" />
                                                    <Setter Property="Background"
                                                            TargetName="border"
                                                            Value="{StaticResource CaleNormTextBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--日期时间选择框样式-->
    <Style x:Key="DateTimePickerStyle1"
           TargetType="{x:Type xctk:DateTimePicker}">
        <Setter Property="Background"
                Value="{StaticResource CaleBackBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource CaleNormTextBrush}" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1,1,0,1" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="TextAlignment"
                Value="Right" />
        <Setter Property="TimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}"
                                    Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Focusable="False"
                                    Margin="0,0,3,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}"
                                    Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                    Focusable="False"
                                    Margin="0,0,3,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            BorderBrush="{StaticResource CaleNormTextBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <xctk:ButtonSpinner x:Name="PART_Spinner"
                                                    AllowSpin="{TemplateBinding AllowSpin}"
                                                    ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                                    HorizontalContentAlignment="Stretch"
                                                    BorderThickness="0"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    IsTabStop="False"
                                                    ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                                                    VerticalContentAlignment="Stretch"
                                                    Style="{StaticResource ButtonSpinnerStyle1}">
                                    <xctk:WatermarkTextBox x:Name="PART_TextBox"
                                                           AcceptsReturn="False"
                                                           BorderThickness="0"
                                                           Background="Transparent"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           FontWeight="{TemplateBinding FontWeight}"
                                                           FontStyle="{TemplateBinding FontStyle}"
                                                           FontStretch="{TemplateBinding FontStretch}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           IsUndoEnabled="True"
                                                           MinWidth="20"
                                                           Padding="{TemplateBinding Padding}"
                                                           TextAlignment="{TemplateBinding TextAlignment}"
                                                           TextWrapping="NoWrap"
                                                           Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                           TabIndex="{TemplateBinding TabIndex}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                                           Watermark="{TemplateBinding Watermark}" />
                                </xctk:ButtonSpinner>
                                <ToggleButton x:Name="_calendarToggleButton"
                                              Style="{StaticResource  ComboBoxToggleButton}"
                                              Grid.Column="1"
                                              Focusable="False"
                                              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.IsHitTestVisible>
                                        <Binding Path="IsOpen"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <xctk:InverseBoolConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </ToggleButton.IsHitTestVisible>
                                    <ToggleButton.IsEnabled>
                                        <Binding Path="IsReadOnly"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <xctk:InverseBoolConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </ToggleButton.IsEnabled>
                                </ToggleButton>
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}"
                                   StaysOpen="False"
                                   HorizontalAlignment="Right">
                                <StackPanel Background="{StaticResource CaleBackBrush}">
                                    <Border BorderBrush="{StaticResource CaleSplitBrush}"
                                            BorderThickness="0,0,0,1">
                                        <StackPanel Orientation="Horizontal"
                                                    Margin="0">
                                            <Calendar x:Name="PART_Calendar"
                                                      BorderThickness="0"
                                                      Style="{DynamicResource CalendarStyle1}" />
                                            <!--隐藏此控件-->
                                            <!--Visibility="{TemplateBinding TimePickerVisibility}"-->
                                            <xctk:TimePicker x:Name="PART_TimeUpDown"
                                                             AllowSpin="{TemplateBinding TimePickerAllowSpin}"
                                                             Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                             ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                                                             FormatString="{TemplateBinding TimeFormatString}"
                                                             Format="{TemplateBinding TimeFormat}"
                                                             IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                                             ShowButtonSpinner="{TemplateBinding TimePickerShowButtonSpinner}"
                                                             Text=""
                                                             Visibility="Collapsed"
                                                             Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                             WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}"
                                                             Watermark="{TemplateBinding TimeWatermark}" />
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <Border Background="{StaticResource CaleHeaderBrush}"
                                                        Margin="-1,0,0,0" />
                                                <Border Background="{StaticResource CaleBackBrush}"
                                                        Grid.Row="2"
                                                        BorderThickness="1,0,0,0"
                                                        BorderBrush="{StaticResource CaleSplitBrush}">
                                                    <local:TimePicker SelectedTime="{Binding Value, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                                      Background="{StaticResource CaleBackBrush}"
                                                                      Foreground="{StaticResource CaleNormTextBrush}"
                                                                      Margin="5"/>
                                                </Border>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                    <ToggleButton Content="关闭"
                                                  IsChecked="{Binding ElementName=PART_Popup,Path=IsOpen}"
                                                  Width="60"
                                                  Height="25"
                                                  Margin="5"
                                                  HorizontalAlignment="Right" />
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="Gray" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly"
                                    TargetName="PART_TextBox"
                                    Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter Property="IsReadOnly"
                                    TargetName="PART_TextBox"
                                    Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="FocusManager.FocusedElement"
                                    TargetName="PART_TextBox"
                                    Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>